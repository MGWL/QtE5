: t >R >R 2 COMMONADR@ CALL_A R> R> ;

Формат вызова функции cdecl --> extern (C)
------------------------------------------
extern (C) int test1(int a, int b)
------------------------------------------
: t >R >R АдрВызова CALL_A R> R> ;
------------------------------------------
Вызов:
   на SR: a b                // функция С выбирает параметры с конца
   на SD: &test1             // Адрес вызываемой функции 
   сам вызов: CALL_A         // Слово форта для вызова адреса
   
Возврат:
   на SR: a b                // их надо убрать самому
   на SD: возврат возврат    // один лишний, надо убрать
   
Формат вызова функции winapi --> extern (Windows)
------------------------------------------
extern (Windows) int test1(int a, int b)
------------------------------------------
: t >R >R АдрВызова CALL_A ;
------------------------------------------
Вызов:
   на SR: a b                // функция С выбирает параметры с конца
   на SD: &test1             // Адрес вызываемой функции 
   сам вызов: CALL_A         // Слово форта для вызова адреса
   
Возврат:
   на SR:                    // сама функция выкидывает параметры
   на SD: возврат возврат    // один лишний, надо убрать   

   
Формат вызова функции D --> 
RP@ 2 3 + . RP@
------------------------------------------
int test1(int a, int b)
------------------------------------------
: t >R >R Z АдрВызова CALL_A R> ;
------------------------------------------
Вызов:
   на SR: b a X              // D выбирает параметры с начала, что за X ???
   на SD: Z &test1           // Z? и Адрес вызываемой функции 
   сам вызов: CALL_A         // Слово форта для вызова адреса
   
Возврат:
   на SR:                    // сама функция выкидывает параметры
   на SD: Z возвр возвр Z    // Z ??

============================================================
Формат вызова функции D --> 

Описание: Скорее всего формат вызова паскалевский.
  Если параметр один, то он передаётся в EAX, фактически
  на вершине SD. Остальные параметры закладываются в стек возвратов
  в обратном порядке. Функция D сама удаляет исходные параметры из
  стека возвратов.
  Возвращаемое значение в EAX, фактически на вершине SD стека данных.
  Как всегда (особенность forth) возвращаемое значение задвоено и +
  грязь в виде одного числа перед возвращаемым значением.
------------------------------------------
int test1(int a, int b, int c)
------------------------------------------
: t >R >R Z АдрВызова CALL_A ;
------------------------------------------
Вызов:
   на SR: b a                // D выбирает параметры с начала
   на SD: c &test1           // c->пар в EAX и Адрес вызываемой функции 
   сам вызов: CALL_A         // Слово форта для вызова адреса
   
Возврат:
   на SR:                    // сама функция выкидывает параметры
   на SD: Z возвр возвр      // Z ??
   
   
: t >R >R >R 7 2 COMMONADR@ CALL_A R> R> ;

: t >R >R 2 COMMONADR@ CALL_A R> ;
RP@ 1 3 2 t  RP@

===============================

5 COMMONADR@ CONST this 4 COMMONADR@ CONST aThis 3 COMMONADR@ CONST test3


3 COMMONADR@ CONST test3
: t 7 >R this test3 CALL_A ;
RP@ t RP@ 
: zz S" Hello from forth ..." TYPE CR ; S" zz" FIND 6 COMMONADR!

: EXECUTEFROMD 
     DUP >R         // Адрес выполнения на стек возвратов
     CELL + @       // 
     BEGIN DUP 
     WHILE DUP CELLS CELL R@ + + @ SWAP 1- 
     REPEAT DROP 
     R> @ EXECUTE  // Снять со стека возвратов и выполнить адрес
     ;

